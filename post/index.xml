<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SECBIT Blog</title>
    <link>https://sec-bit.github.io/blog/post/</link>
    <description>Recent content in Posts on SECBIT Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 22 Jan 2020 08:00:00 +0800</lastBuildDate><atom:link href="https://sec-bit.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从零开始学习 zk-SNARK（五）——Pinocchio 协议</title>
      <link>https://sec-bit.github.io/blog/2020/01/22/learn-zk-snark-from-zero-part-five/</link>
      <pubDate>Wed, 22 Jan 2020 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2020/01/22/learn-zk-snark-from-zero-part-five/</guid>
      <description>作为本系列的最后一篇文章，本文继续对 zk-SNARK 协议进行完善，最终形成一个完整的 zk-SNARK 协议。</description>
    </item>
    
    <item>
      <title>从零开始学习 zk-SNARK（四）——多项式的约束</title>
      <link>https://sec-bit.github.io/blog/2020/01/15/learn-zk-snark-from-zero-part-four/</link>
      <pubDate>Wed, 15 Jan 2020 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2020/01/15/learn-zk-snark-from-zero-part-four/</guid>
      <description>上一篇文章中我们学习了如何将程序转换为多项式进行证明。到这里似乎已经有点晕了，本文将对协议执行进一步的约束，并对协议展开优化。</description>
    </item>
    
    <item>
      <title>云中「秘密」：构建非交互式零知识证明</title>
      <link>https://sec-bit.github.io/blog/2020/01/08/nizk-by-crs/</link>
      <pubDate>Wed, 08 Jan 2020 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2020/01/08/nizk-by-crs/</guid>
      <description>之前我们介绍了如何采用「随机预言机」来扮演一个虚拟的「第三方」角色，实现虚拟的「交互」与「随机挑战」。本文将深入讲述另一种方法实现非交互式零知识证明，即如何通过一段共享的字符串去除「交互」与「隐藏随机性」。这个字符串必须事先由「第三方」来随机产生，这就是传说中的「公共参考串」（Common Reference String，简称 CRS）。</description>
    </item>
    
    <item>
      <title>从零开始学习 zk-SNARK（三）——从程序到多项式的构造</title>
      <link>https://sec-bit.github.io/blog/2020/01/08/learn-zk-snark-from-zero-part-three/</link>
      <pubDate>Wed, 08 Jan 2020 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2020/01/08/learn-zk-snark-from-zero-part-three/</guid>
      <description>前文主要介绍了如何构造多项式的零知识证明协议，现在将开始探讨如何构造更通用的协议。本节主要是讲如何将一组计算的证明转换为多项式进行证明。本文重点主要包括：多项式的算术性质，多项式插值等。</description>
    </item>
    
    <item>
      <title>零知识证明 Learn by Coding：libsnark 入门篇</title>
      <link>https://sec-bit.github.io/blog/2020/01/03/zkp-learn-by-coding-libsnark-101/</link>
      <pubDate>Fri, 03 Jan 2020 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2020/01/03/zkp-learn-by-coding-libsnark-101/</guid>
      <description>希望通过本系列文章，所有开发者都能亲自上手实践，在短时间内迅速入门 libsnark，一步步了解 libsnark 的基本概念，学会如何开发 zk-SNARKs 电路，完成证明的生成和验证，最终将零知识证明应用到真实业务中去。</description>
    </item>
    
    <item>
      <title>从零开始学习 zk-SNARK（二）——多项式的非交互式零知识证明</title>
      <link>https://sec-bit.github.io/blog/2020/01/01/learn-zk-snark-from-zero-part-two/</link>
      <pubDate>Wed, 01 Jan 2020 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2020/01/01/learn-zk-snark-from-zero-part-two/</guid>
      <description>even@安比实验室: 上一篇文章中，作者介绍了如何利用多项式的性质来证明某个多项式的知识，相信大家已经对构造证明有了一些基本的认识。目前的证明协议仍然存在一些缺陷，本文将会针对这些薄弱项进行改进，进而最终构造出关于多项式的零知识证明协议。本文重点：KEA，交互式零知识证明，非交互式零知识证明和 Setup。</description>
    </item>
    
    <item>
      <title>从零开始学习 zk-SNARK（一）——多项式的性质与证明</title>
      <link>https://sec-bit.github.io/blog/2019/12/25/learn-zk-snark-from-zero-part-one/</link>
      <pubDate>Wed, 25 Dec 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/12/25/learn-zk-snark-from-zero-part-one/</guid>
      <description>当我第一次了解到 zk-SNARK 技术是如何将这些东西完美地融合在一起的时候，就被数学之美震撼到了，并且随着我发现的维度越多，好奇心就越强烈。在这篇文章中，我主要就基于一些实例简洁明了地阐明 zk-SNARK ，并对这里面的很多问题做出了解释，并利用这种方式分享了我的经验，进而让更多人也能够欣赏到这项最先进的技术以及它的创新之处，最终欣赏到数学之美。</description>
    </item>
    
    <item>
      <title>链上富人寻「隐私」记（一：Mixer 篇）</title>
      <link>https://sec-bit.github.io/blog/2019/12/19/onchain-privacy-and-mixer/</link>
      <pubDate>Thu, 19 Dec 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/12/19/onchain-privacy-and-mixer/</guid>
      <description>10 月底，在最爱的《橙皮书📙》公众号里看到了自己，心里却不是滋味，背后甚至有些发凉。Bowen 的一篇文章——「Top 10 DeFi 大户的链上人生」让我彻底暴露了。</description>
    </item>
    
    <item>
      <title>零知识证明学习资源汇总</title>
      <link>https://sec-bit.github.io/blog/2019/11/07/zkp-learning-resources/</link>
      <pubDate>Thu, 07 Nov 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/11/07/zkp-learning-resources/</guid>
      <description>本文收集了关于零知识证明的一些学习资料（包括科普文章、论文、开源仓库及相关学习网站等），并对这些资源进行了整理分析，希望能对大家有所帮助。</description>
    </item>
    
    <item>
      <title>亚瑟王的「随机」挑战：从交互到非交互式零知识证明</title>
      <link>https://sec-bit.github.io/blog/2019/11/01/from-interactive-zkp-to-non-interactive-zkp/</link>
      <pubDate>Fri, 01 Nov 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/11/01/from-interactive-zkp-to-non-interactive-zkp/</guid>
      <description>通过随机数挑战是交互式零知识证明的「信任根基」。但，「交互过程」会限制应用场景。如果能将交互式零知识证明变成「非交互」？这会非常非常激动人心。所谓的非交互可以看成是只有「一轮」的证明过程，即Alice 直接发一个证明给 Bob 进行验证。</description>
    </item>
    
    <item>
      <title>如果量子计算时代到来，我们的比特币安全吗？</title>
      <link>https://sec-bit.github.io/blog/2019/10/28/bitcoin-safety-in-the-coming-era-of-quantum-computing/</link>
      <pubDate>Mon, 28 Oct 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/10/28/bitcoin-safety-in-the-coming-era-of-quantum-computing/</guid>
      <description>量子时代的到来不可避免，巨大的变革将会带来无尽的机会，区块链、密码学与数字资产安全无疑是未来十年的焦点，请扔掉包袱，与我们一起前行。</description>
    </item>
    
    <item>
      <title>读心术：从零知识证明中提取「知识」</title>
      <link>https://sec-bit.github.io/blog/2019/08/28/extractor-and-proof-of-knowledge/</link>
      <pubDate>Wed, 28 Aug 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/08/28/extractor-and-proof-of-knowledge/</guid>
      <description>只有「知识」在存在的前提下，保证「零知识」才有意义。</description>
    </item>
    
    <item>
      <title>从「模拟」理解零知识证明：平行宇宙与时光倒流</title>
      <link>https://sec-bit.github.io/blog/2019/08/06/understand-zero-knowledge-proof-by-simulator/</link>
      <pubDate>Tue, 06 Aug 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/08/06/understand-zero-knowledge-proof-by-simulator/</guid>
      <description>相信很多人都听说过零知识证明，但是只有极少数人听说过模拟，然而模拟是理解零知识的关键。</description>
    </item>
    
    <item>
      <title>初识「零知识」与「证明」</title>
      <link>https://sec-bit.github.io/blog/2019/07/31/zero-knowledge-and-proof/</link>
      <pubDate>Wed, 31 Jul 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/07/31/zero-knowledge-and-proof/</guid>
      <description>要解释「零知识证明」，我们需要先解释「证明」，然后解释什么是「知识」，最后再解释什么是「零知识」。</description>
    </item>
    
    <item>
      <title>zkSNARKs 合约库「输入假名」漏洞致众多零知项目存在安全风险</title>
      <link>https://sec-bit.github.io/blog/2019/07/29/the-input-aliasing-bug-caused-by-a-contract-library-of-zksnarks/</link>
      <pubDate>Mon, 29 Jul 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/07/29/the-input-aliasing-bug-caused-by-a-contract-library-of-zksnarks/</guid>
      <description>大量零知识证明项目由于错误地使用了某个 zkSNARKs 合约库，引入「输入假名 (Input Aliasing) 」漏洞，可导致伪造证明、双花、重放等攻击行为发生，且攻击成本极低。众多以太坊社区开源项目受影响，其中包括三大最常用的 zkSNARKs 零知开发库 snarkjs、ethsnarks、ZoKrates，以及近期大热的三个混币（匿名转账）应用 hopper、Heiswap、Miximus。</description>
    </item>
    
    <item>
      <title>PoD-Tiny——实现零信任交易的最简协议</title>
      <link>https://sec-bit.github.io/blog/2019/07/24/zkpod-explained-pod-tiny/</link>
      <pubDate>Wed, 24 Jul 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/07/24/zkpod-explained-pod-tiny/</guid>
      <description>zkPoD 是一个全新的实现 ZKCP 目标的方案。目前 zkPoD 已经支持上 GB 的数据，支持低 TPS 公链，也支持高 TPS 联盟链；既支持二进制数据，也支持带有内部丰富类型与结构的表格数据。与传统的「受信第三方」相比，zkPoD 利用区块链来作为一个「Trustless 第三方」，实现了的「零信任公平交易」。本文介绍一个极简的 PoD 协议——PoD-Tiny，这个协议简化了很多问题，并不实用，但是可以帮助读者快速理解 PoD 的原理和面临的挑战。</description>
    </item>
    
    <item>
      <title>zkPoD：区块链，零知识证明与形式化验证，实现无中介、零信任的公平交易</title>
      <link>https://sec-bit.github.io/blog/2019/07/14/zkpod-short-intro/</link>
      <pubDate>Sun, 14 Jul 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/07/14/zkpod-short-intro/</guid>
      <description>所谓「公平交易」是指买卖双⽅在不相识（不互信）的情况下，能够放⼼进⾏交易⽽⽆需担⼼对⽅作弊。如果交易顺利完成，则买家得到商品，同时卖家得到钱款；若协议中途任何⼀⽅退出，或任何⼀⽅作弊，协议都会保证另⼀⽅的利益不会受损。如何利用零知识证明 (ZKP) 与区块链来实现去中介的公平交易协议？</description>
    </item>
    
    <item>
      <title>Move语言：我眼中的 Libra 最大亮点</title>
      <link>https://sec-bit.github.io/blog/2019/07/10/move-programming-language-the-highlight-of-libra/</link>
      <pubDate>Wed, 10 Jul 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/07/10/move-programming-language-the-highlight-of-libra/</guid>
      <description>Libra 的一系列发布中，新的编程语言 Move 尤为吸人眼球。第一时间看了 Move 的白皮书，嗯，这也许才是未来智能合约语言该有的样子。</description>
    </item>
    
    <item>
      <title>为什么说区块链是一座全新的博弈竞技场？</title>
      <link>https://sec-bit.github.io/blog/2019/06/13/ethereum-the-unprecedented-arena-for-playing-cooperative-games/</link>
      <pubDate>Thu, 13 Jun 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/06/13/ethereum-the-unprecedented-arena-for-playing-cooperative-games/</guid>
      <description>区块链到底有什么用？</description>
    </item>
    
    <item>
      <title>Don’t Test, Verify —— 哪个故事真正符合你对形式化验证的想象？</title>
      <link>https://sec-bit.github.io/blog/2018/10/24/formal-verification-background/</link>
      <pubDate>Wed, 24 Oct 2018 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2018/10/24/formal-verification-background/</guid>
      <description>世界上是否有一种技术可以保证计算机程序绝对安全，能够完全抵挡住黑客的进攻？</description>
    </item>
    
  </channel>
</rss>
