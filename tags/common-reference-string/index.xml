<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Common Reference String on SECBIT Blog</title>
    <link>https://sec-bit.github.io/blog/tags/common-reference-string/</link>
    <description>Recent content in Common Reference String on SECBIT Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 08 Jan 2020 08:00:00 +0800</lastBuildDate><atom:link href="https://sec-bit.github.io/blog/tags/common-reference-string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>云中「秘密」：构建非交互式零知识证明</title>
      <link>https://sec-bit.github.io/blog/2020/01/08/nizk-by-crs/</link>
      <pubDate>Wed, 08 Jan 2020 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2020/01/08/nizk-by-crs/</guid>
      <description>之前我们介绍了如何采用「随机预言机」来扮演一个虚拟的「第三方」角色，实现虚拟的「交互」与「随机挑战」。本文将深入讲述另一种方法实现非交互式零知识证明，即如何通过一段共享的字符串去除「交互」与「隐藏随机性」。这个字符串必须事先由「第三方」来随机产生，这就是传说中的「公共参考串」（Common Reference String，简称 CRS）。</description>
    </item>
    
    <item>
      <title>亚瑟王的「随机」挑战：从交互到非交互式零知识证明</title>
      <link>https://sec-bit.github.io/blog/2019/11/01/from-interactive-zkp-to-non-interactive-zkp/</link>
      <pubDate>Fri, 01 Nov 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/11/01/from-interactive-zkp-to-non-interactive-zkp/</guid>
      <description>通过随机数挑战是交互式零知识证明的「信任根基」。但，「交互过程」会限制应用场景。如果能将交互式零知识证明变成「非交互」？这会非常非常激动人心。所谓的非交互可以看成是只有「一轮」的证明过程，即Alice 直接发一个证明给 Bob 进行验证。</description>
    </item>
    
  </channel>
</rss>
