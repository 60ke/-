<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vulnerability on SECBIT Blog</title>
    <link>https://sec-bit.github.io/blog/tags/vulnerability/</link>
    <description>Recent content in Vulnerability on SECBIT Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 29 Jul 2019 08:00:00 +0800</lastBuildDate><atom:link href="https://sec-bit.github.io/blog/tags/vulnerability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>zkSNARKs 合约库「输入假名」漏洞致众多零知项目存在安全风险</title>
      <link>https://sec-bit.github.io/blog/2019/07/29/the-input-aliasing-bug-caused-by-a-contract-library-of-zksnarks/</link>
      <pubDate>Mon, 29 Jul 2019 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2019/07/29/the-input-aliasing-bug-caused-by-a-contract-library-of-zksnarks/</guid>
      <description>大量零知识证明项目由于错误地使用了某个 zkSNARKs 合约库，引入「输入假名 (Input Aliasing) 」漏洞，可导致伪造证明、双花、重放等攻击行为发生，且攻击成本极低。众多以太坊社区开源项目受影响，其中包括三大最常用的 zkSNARKs 零知开发库 snarkjs、ethsnarks、ZoKrates，以及近期大热的三个混币（匿名转账）应用 hopper、Heiswap、Miximus。</description>
    </item>
    
    <item>
      <title>Don’t Test, Verify —— 哪个故事真正符合你对形式化验证的想象？</title>
      <link>https://sec-bit.github.io/blog/2018/10/24/formal-verification-background/</link>
      <pubDate>Wed, 24 Oct 2018 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2018/10/24/formal-verification-background/</guid>
      <description>世界上是否有一种技术可以保证计算机程序绝对安全，能够完全抵挡住黑客的进攻？</description>
    </item>
    
    <item>
      <title>是谁控制了比特币，是你？还是钱包？BTC地址与交易原理剖析</title>
      <link>https://sec-bit.github.io/blog/2018/09/29/bitcoin-p2pk2-p2sh-addr-pywallet-bug/</link>
      <pubDate>Sat, 29 Sep 2018 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2018/09/29/bitcoin-p2pk2-p2sh-addr-pywallet-bug/</guid>
      <description>安比（SECBIT）实验室在对数字钱包源码审计时，发现一个名为 pywallet 的比特币钱包开源库包含了一个严重缺陷。如果向 pywallet 生成的 OmniLayer 收款地址转账，将导致资产永久丢失。</description>
    </item>
    
    <item>
      <title>Fomo3D 千万大奖获得者“特殊攻击技巧”完全揭露</title>
      <link>https://sec-bit.github.io/blog/2018/08/23/how-the-winner-got-fomo3d-prize-a-detailed-explanation/</link>
      <pubDate>Thu, 23 Aug 2018 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2018/08/23/how-the-winner-got-fomo3d-prize-a-detailed-explanation/</guid>
      <description>Fomo3D 游戏第一轮正式结束，最终大奖由地址 0xa169 获得，奖金额高达 10,469.66 以太币。
不少人轻易得出结论：获奖者平平无奇。</description>
    </item>
    
    <item>
      <title>Last Winner 的最后赢家 - 智能合约超大规模黑客攻击手法曝光</title>
      <link>https://sec-bit.github.io/blog/2018/08/20/last-winner-of-lastwinner/</link>
      <pubDate>Mon, 20 Aug 2018 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2018/08/20/last-winner-of-lastwinner/</guid>
      <description>Last Winner（类 Fomo3D）游戏大火，导致以太坊异常拥堵，Gas 费用暴涨。大量以太币资金入场。Last Winner 游戏合约存在大量非正常交易，并且伴随着大量合约的创建与自毁，与正常人类调用行为特征偏离很大，这引起了我们的高度警惕。</description>
    </item>
    
    <item>
      <title>ERC223及ERC827实现代码欠缺安全考虑</title>
      <link>https://sec-bit.github.io/blog/2018/06/24/lacking-insights-in-erc223-erc827-implementation/</link>
      <pubDate>Sun, 24 Jun 2018 08:00:00 +0800</pubDate>
      
      <guid>https://sec-bit.github.io/blog/2018/06/24/lacking-insights-in-erc223-erc827-implementation/</guid>
      <description>ERC223, ERC827的部分实现代码引入了任意函数调用缺陷，可能会对使用这部分代码的合约带来安全漏洞。如果需要实现上述规范接口，请仔细检查实现代码。这种合约本身允许用户自定义 &lt;code&gt;call()&lt;/code&gt; 任意地址上任意函数的设计，十分危险。攻击者可以很容易地借用当前合约的身份来进行&lt;strong&gt;任何操作&lt;/strong&gt;，比如盗取Token或者绕开权限检查等。</description>
    </item>
    
  </channel>
</rss>
